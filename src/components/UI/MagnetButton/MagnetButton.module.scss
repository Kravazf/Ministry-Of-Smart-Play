$t: 1s;

@property --k {
	syntax: '<number>';
	initial-value: -1;
	inherits: true
}

button {
	--m: 1;
	grid-area: 2/ 1/ span 1/ span 2;
	position: relative;
	margin: 0;
	border: solid 0 transparent;
	padding: 7px 8px;
	border-radius: 7px;
	box-shadow: inset 0 0 1px #23429e;
	background: 
  radial-gradient(rgba(0, 0, 0, 0.87), 67.5%, #1e3251) padding-box,
  radial-gradient(#a0c2ed, 35%, rgba(160, 194, 237, 0) 70%) 50% 0/80% 50% repeat-y;
	color: #f2fdfe;
	font-size: 15px;
	cursor: pointer;
	
	#slow:checked ~ & { --m: 5 }
}

button:hover {
	color: rgb(0, 220, 130);
	text-shadow: 0 0 5px rgb(0, 220, 130);
}

@keyframes k { 0%, 33.3% { --k: 1 } }

.particle {
  button:hover & {
	--f: 1;
	--pos-k: max(0, var(--k));
	--neg-k: max(0, -1*var(--k));
	--low-c: min(1, 4*(1 - var(--pos-k)));
	--abs-d: max(var(--neg-k) - .5, .5 - var(--neg-k));
	--mov-f: var(--pos-k);
	display: grid;
	position: absolute;
	left: var(--x); top: var(--y);
	rotate: var(--a);
	animation: k calc(var(--m)*#{$t}) linear calc(var(--m)*var(--t, 0)*#{$t}) infinite;
	
	@supports (scale: sqrt(4)) { --mov-f: sqrt(var(--pos-k)) }
	
	&::before, &::after {
		grid-area: 1/ 1;
		width: .75em;
		aspect-ratio: 1
	}
	
	&::before {
		--sa: calc(min(1, 1 - 2*min(.5, var(--mov-f)))*45deg);
		border-radius: calc(1.25*min(.8, var(--mov-f))*50%) 50% 50%;
		transform-origin: 0 0;
		translate: calc(var(--mov-f)*var(--d));
		rotate: -45deg;
		scale: var(--f);
		transform: skew(var(--sa), var(--sa));
		opacity: var(--low-c);
		filter: Saturate(var(--low-c));
		background: radial-gradient(at 85% 85%, #270863, rgb(0, 220, 130) 90%);
		content: ''
	}
	
	&::after {
		translate: -50% -50%;
		scale: calc(var(--f)*(1 - 2*var(--abs-d)));
		text-align: center;
		filter: blur(.5px);
		content: 'âœ¦'
	}
}
}
